name: build whl and uploads

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-cuda111:
    runs-on: windows-2019
    env:
      BAZEL_PATH: "D:\\bazel.exe"
      #TEMP: C:\\Users\\runneradmin\\Temp
      #TMP: C:\\Users\\runneradmin\\Temp
      PYTHONUNBUFFERED: '1'

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: Jimver/cuda-toolkit@v0.2.10
        id: cuda-toolkit
        with:
          method: 'network'
          cuda: '11.3.1'
          sub-packages: '["cuda_cudart", "cuda_cuobjdump", "cuda_cupti", "cuda_cuxxfilt", "cuda_demo_suite", "cuda_documentation", "cuda_memcheck", "cuda_nvcc", "cuda_nvdisasm", "cuda_nvml_dev", "cuda_nvprof", "cuda_nvprune", "cuda_nvrtc", "cuda_nvtx", "cuda_nvvp", "cuda_sanitizer_api", "cuda_thrust", "libcublas", "libcufft", "libcurand", "libcusolver", "libcusparse", "libnpp", "libnvjpeg", "nsight_compute", "nsight_nvtx", "nsight_systems", "nsight_vse", "visual_studio_integration"]'
          #sub-packages: '["nvcc", "cupti", "visual_profiler", "nvprof", "nsight_nvtx" ,"cublas", "cublas_dev", "npp", "npp_dev", "cufft", "cufft_dev", "nvrtc", "nvrtc_dev", "curand", "curand_dev", "cusolver", "cusolver_dev", "cusparse", "cusparse_dev", "nvml_dev", "cudart", "visual_studio_integration"]'

      - name: install cudnn
        shell: pwsh
        run: .\scripts\install_cuda.ps1

      - name: Configure pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 8GB
          maximum-size: 32GB
          disk-root: "C:"

      - name: Download Bazelisk
        run: curl -k -L https://github.com/bazelbuild/bazelisk/releases/download/v1.10.1/bazelisk-windows-amd64.exe -o $env:BAZEL_PATH

      - name: Mount bazel cache
        uses: actions/cache@v3
        with:
          path: D:/bzl_out
          key: bazel-v1-cache

      - name: py309
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: py39 pip install
        run: pip install -r "$env:GITHUB_WORKSPACE/build-requirements.txt"

      - name: py310 build whl
        run: |
          cd "$env:GITHUB_WORKSPACE/jax"
          ../bazel-build-cuda.ps1 -bazel_path $env:BAZEL_PATH -cuda_version '11.3'

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: jax-library
          path: |
            ./dist/*.whl
            ./bazel-dist/**/*.whl
